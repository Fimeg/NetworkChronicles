version: '3.8'

services:
  network-chronicles:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: network-chronicles-2.0
    volumes:
      - network-chronicles-data:/app/data
      - network-chronicles-logs:/app/logs
      - network-chronicles-user-data:/app/user-data
    ports:
      - "3000:3000"  # Web UI and API
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - network-chronicles-net

  # Optional database service for more advanced features
  # Uncomment to enable
  # mongodb:
  #   image: mongo:5.0
  #   container_name: network-chronicles-db
  #   volumes:
  #     - mongodb-data:/data/db
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=password
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - network-chronicles-net
  #   restart: unless-stopped

  # Optional Redis service for caching and pub/sub
  # Uncomment to enable
  # redis:
  #   image: redis:6.2-alpine
  #   container_name: network-chronicles-redis
  #   volumes:
  #     - redis-data:/data
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - network-chronicles-net
  #   restart: unless-stopped

volumes:
  network-chronicles-data:
    name: network-chronicles-2.0-data
  network-chronicles-logs:
    name: network-chronicles-2.0-logs
  network-chronicles-user-data:
    name: network-chronicles-2.0-user-data
  # mongodb-data:
  #   name: network-chronicles-mongodb-data
  # redis-data:
  #   name: network-chronicles-redis-data

networks:
  network-chronicles-net:
    name: network-chronicles-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
